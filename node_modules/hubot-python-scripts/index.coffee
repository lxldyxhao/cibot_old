# Description:
#   None
#
# Dependencies:
#   None
#
# Configuration:
#   None
#
# Author:
#   maxgoedjen


class PythonScript

  pyScriptPath = __dirname + '/python_dispatch.py'
  python_script = require('child_process').spawn('python', [pyScriptPath])
  python_script.stdout.on 'data', (data) =>
    receive_from_python(data.toString())

  module.exports = (robot) ->
    @robot = robot
    robot.respond /(.*)/i, (msg) ->
      newRegex = new RegExp("^[@]?#{robot.name}[:,]? ?(.*)", 'i')
      match = newRegex.exec msg.message.text
      send_to_python(match[1], msg.message.room, 'respond')
    robot.hear /(.*)/i, (msg) ->
      send_to_python(msg.message.text, msg.message.room, msg.message.user.name, 'hear')

  send_to_python = (message, room, name, method) ->
    user =
      room : room,
      name : name
    dict =
      type : method,
      message : message,
      user : user
    @robot.logger.info "Python模块消息，向Python脚本发送json:#{JSON.stringify(dict)}"

    python_script.stdin.write(JSON.stringify(dict) + '\n')

  receive_from_python = (jsons) ->
     try
        jsons = jsons.split "\n"
        for json in jsons
          @robot.logger.info "Python模块消息，Python发送json:#{json}"
          data = JSON.parse json
          @robot.send data, data.message
     catch err
        @robot.logger.info "Python模块消息，json格式错误,err:#{err}"



