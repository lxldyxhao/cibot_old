# coding=utf-8
from scripts.hubot_script import *
import pymysql
import json
import traceback
import logging
import re

# 通过下面的方式进行简单配置输出方式与日志级别
logging.basicConfig(filename='logger2.log', level=logging.INFO,
                    format="%(asctime)s %(filename)s %(lineno)d %(message)s",
                    datefmt="%a %d %b %Y %H:%M:%S")


# from   import python_dispatch


class Cash(HubotScript):
  @hear(u'^兑换现金红包：([0-9]+)$')  # 1.监听对话
  def say(self, message, matches):
    config = {
      'host': 'localhost',
      'port': 3306,
      'user': 'root',
      'password': 'password',
      'db': 'hubot',
      'charset': 'utf8mb4',
      'cursorclass': pymysql.cursors.DictCursor,
    }
    conn = pymysql.connect(**config)
    cursor = conn.cursor()

    try:
      bonus = float(matches[0])
      value = [message['user']['name']]
      cursor.execute('select Bonus,NickName,freebonus from contact where UserName = %s', value)
      conn.commit()
      result = cursor.fetchone()
      if result is not None:
        remainingBonus = float(result['Bonus'])
        remainingFreeBonus = float(result['freebonus'])
        nickname = result['NickName']

        # 比较自由金额和用户想提现的 金额
        if remainingFreeBonus < bonus:
          # 不够提的
          logging.error('#bonus_not_enough1')
          # 提示用户
          message['message'] = "您剩余的可提现资产为：" + str(
            remainingFreeBonus) + "元，不足支付：" \
                               + str(
            bonus) + "元，多回答问题赚红包吧~"

          logging.error('#bonus_not_enough2')
          content = json.dumps(message)
          return "-1&&" + content
        else:
          remainingFreeBonus -= bonus
          # 更新数据
          try:
            cursor.execute('update contact set freebonus =  %s where UserName = %s',
                           [remainingFreeBonus, message['user']['name']])
            logging.error('#issue3')

          except Exception as e:
            conn.rollback()  # 事务回滚
            print('sql error', e)
            logging.error('#000000')
          else:
            conn.commit()  # 事务提交
            # 转发给管理员
            cursor.execute('SELECT UserName FROM contact WHERE NickName = %s', ["梁旭磊"])
            conn.commit()
            logging.error('#00001')
            result = cursor.fetchone()
            if result is not None:
              logging.error('#00002')
              manage_user = str(result['UserName'])
              logging.error('#0000*****')
              broadcast = nickname + u" 希望兑换红包：" + str(bonus) + u"元"
              logging.error('#00003')

              msg1 = {"type": "hear",
                      "message": broadcast,
                      "user": {"room": "", "name": manage_user}
                      }
              content1 = json.dumps(msg1)

              logging.error('#00004')

              message['message'] = "已经向管理员发送请求，请耐心等待。。。"
              content = json.dumps(message)

              logging.error('#00005')
              data = "0&&" + content + "&&" + content1
              logging.error('#00006')
              return data



    except:
      traceback.print_exc()
      # 发生错误时会滚
      conn.rollback()

    finally:  # 关闭游标连接
      cursor.close()
      # 关闭数据库连接
      conn.close()
