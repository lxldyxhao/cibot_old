# coding=utf-8
from scripts.hubot_script import *
import pymysql
import json


# from   import python_dispatch


class Feedback(HubotScript):
  @hear('Thanks huboter #(.*) so that issue #(.*) is closed!')  # 1.监听对话
  def comment(self, message, matches):
    config = {
      'host': 'localhost',
      'port': 3306,
      'user': 'root',
      'password': 'password',
      'db': 'hubot',
      'charset': 'utf8mb4',
      'cursorclass': pymysql.cursors.DictCursor,
    }
    conn = pymysql.connect(**config)
    cursor = conn.cursor()

    try:
      solution_id = int(matches[0])
      issue_id = int(matches[1])
      # 2.修改问题状态 为 1
      value = [issue_id]
      cursor.execute('update issue set status = 1 where id = %s', value)
      conn.commit()
      # 3.修改解决方案状态为 1
      value = [solution_id]
      cursor.execute('update solution set status = 1 where id = %s', value)
      conn.commit()

      # 4.回复答主,发红包
      # 4.1查找问题的悬赏积分
      value = [issue_id]
      cursor.execute('select bonus from issue where id = %s', value)
      conn.commit()
      result = cursor.fetchone()
      if result is not None:
        bonus = int(result['bonus'])
        # 4.2 查回答的答主
        value = [solution_id]
        cursor.execute('select response from solution where id = %s', value)
        conn.commit()
        result = cursor.fetchone()
        if result is not None:
          response = result['response']
          # 4.3 更改双方的 积分
          # sql1 = 'update contact set Bonus =Bonus + ' + bonus + ' where UserName = ' + request + "'"
          # sql2 = 'update contact set Bonus =Bonus - ' + bonus + ' where UserName = '" + message['user']['name'] + "'"
          try:
            cursor.execute('select Bonus from contact where UserName = %s', [response])  # 答主
            result = cursor.fetchone()
            if result is not None:
              answer_bonus = int(result['Bonus'])

              cursor.execute('select Bonus from contact where UserName = %s', [message['user']['name']])  # 题主
              result = cursor.fetchone()
              if result is not None:
                ask_bonus = int(result['Bonus'])

                answer_bonus += bonus
                ask_bonus -= bonus
                # print answer_bonus
                # print ask_bonus

                cursor.execute('update contact set Bonus =  %s where UserName = %s',
                               [answer_bonus, response])  # 答主
                cursor.execute('update contact set Bonus =  %s where UserName = %s',
                               [ask_bonus, message['user']['name']])  # 题主


          except Exception as e:
            conn.rollback()  # 事务回滚
            # print('sql error', e)
          else:
            conn.commit()  # 事务提交
            # print('sql success', "okkkk")
            # 4.4 查看是否确实到账,通知答主
            value = [response]
            cursor.execute('select Bonus from contact where UserName = %s', value)
            conn.commit()
            result = cursor.fetchone()
            # print('###', "111")
            if result is not None:
              # print('###', "222")
              remaining_bonus = int(result['Bonus'])

              # 回复回答者
              broadcast = u"非常感谢您，提问者发给您一个红包：" + str(bonus) + \
                          u"元 ,您现在的资产为：" + str(remaining_bonus+bonus) + u"元"

              msg1 = {"type": "hear",
                      "message": broadcast,
                      "user": {"room": "", "name": response}
                      }
              content1 = json.dumps(msg1)

              # 回复提问者
              message['message'] = u"已经成功将红包发给了#" + matches[0]
              content = json.dumps(message)


              return "2&&" + content + "&&" + content1

    except:
      import traceback
      traceback.print_exc()
      # 发生错误时会滚
      conn.rollback()

    finally:  # 关闭游标连接
      cursor.close()
      # 关闭数据库连接
      conn.close()
